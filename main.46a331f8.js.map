{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","addRow","removeRow","addColumn","removeColumn","tableCell","createElement","tableRows","body","getElementsByTagName","maxOfElements","minOfElements","countRows","rows","length","countColumns","cells","createEventBtn","button","removeItem","item","addEventListener","checkerOnEnable","addElement","removeElement","element","row","tBodies","append","cloneNode","forEach","lastIndex","remove","lastElementChild","countOfItems","addItem","disabled"],"mappings":";AAAA,aA8FC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5FD,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAASF,SAASC,cAAc,eAChCE,EAAYH,SAASC,cAAc,eACnCG,EAAYJ,SAASC,cAAc,kBACnCI,EAAeL,SAASC,cAAc,kBACtCK,EAAYN,SAASO,cAAc,MACnCC,EAAYR,SAASS,KAAKC,qBAAqB,MAC/CC,EAAgB,GAChBC,EAAgB,EAClBC,EAAYd,EAAMe,KAAKC,OACvBC,EAAejB,EAAMe,KAAK,GAAGG,MAAMF,OAEjCG,EAAiB,SAAaC,EAAQC,EAAYC,GACtDF,EAAOG,iBAAiB,QAAS,WACvBH,OAAAA,GACDjB,KAAAA,EAEHqB,IADAV,EAC2BM,EAAQC,GACnCI,EAAWH,GACX,MAEGjB,KAAAA,EAEHmB,IADAP,EAC8BG,EAAQC,GACtCI,EAAWH,GACX,MAEGlB,KAAAA,EAEHoB,IADAV,EAC2BO,EAAYD,GACvCM,EAAcJ,GACd,MAEGhB,KAAAA,EAEHkB,IADAP,EAC8BI,EAAYD,GAC1CM,EAAcJ,OAWtB,SAASG,EAAWE,GACVA,OAAAA,GACD,IAAA,MACGC,IAAAA,EAAM5B,EAAMe,KAAK,GACLf,EAAM6B,QAAQ,GAEtBC,OAAOF,EAAIG,WAAU,IAC/B,MACG,IAAA,SACqBtB,EAAAA,GAEZuB,QAAQ,SAAAV,GAAQA,OAAAA,EAAKQ,OAAOvB,EAAUwB,gBAKxD,SAASL,EAAcC,GACbA,OAAAA,GACD,IAAA,MACGM,IAAAA,EAAYjC,EAAMe,KAAKC,OAAS,EAC1BhB,EAAMe,KAAKkB,GAEnBC,SACJ,MAEG,IAAA,SACqBzB,EAAAA,GAEZuB,QAAQ,SAAAV,GAAQA,OAAAA,EAAKa,iBAAiBD,YAKxD,SAASV,EAAgBY,EAAcC,EAAShB,GAC1Be,EAAexB,GACjBwB,EAAevB,GAG/BwB,EAAQC,UAAW,EACnBjB,EAAWiB,UAAW,GACbF,IAAiBvB,EAC1BQ,EAAWiB,UAAW,EACbF,IAAiBxB,IAC1ByB,EAAQC,UAAW,GAhDvBnB,EAAehB,EAAQC,EAAW,OAClCe,EAAed,EAAWC,EAAc,UACxCa,EAAef,EAAWD,EAAQ,OAClCgB,EAAeb,EAAcD,EAAW","file":"main.46a331f8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('.field');\nconst addRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst addColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst tableCell = document.createElement('td');\nconst tableRows = document.body.getElementsByTagName('tr');\nconst maxOfElements = 10;\nconst minOfElements = 2;\nlet countRows = table.rows.length;\nlet countColumns = table.rows[0].cells.length;\n\nconst createEventBtn = function add(button, removeItem, item) {\n  button.addEventListener('click', () => {\n    switch (button) {\n      case addRow:\n        countRows++;\n        checkerOnEnable(countRows, button, removeItem);\n        addElement(item);\n        break;\n\n      case addColumn:\n        countColumns++;\n        checkerOnEnable(countColumns, button, removeItem);\n        addElement(item);\n        break;\n\n      case removeRow:\n        countRows--;\n        checkerOnEnable(countRows, removeItem, button);\n        removeElement(item);\n        break;\n\n      case removeColumn:\n        countColumns--;\n        checkerOnEnable(countColumns, removeItem, button);\n        removeElement(item);\n        break;\n    }\n  });\n};\n\ncreateEventBtn(addRow, removeRow, 'row');\ncreateEventBtn(addColumn, removeColumn, 'column');\ncreateEventBtn(removeRow, addRow, 'row');\ncreateEventBtn(removeColumn, addColumn, 'column');\n\nfunction addElement(element) {\n  switch (element) {\n    case 'row':\n      const row = table.rows[0];\n      const bodyTable = table.tBodies[0];\n\n      bodyTable.append(row.cloneNode(true));\n      break;\n    case 'column':\n      const tableRowArr = [...tableRows];\n\n      tableRowArr.forEach(item => item.append(tableCell.cloneNode()));\n      break;\n  }\n}\n\nfunction removeElement(element) {\n  switch (element) {\n    case 'row':\n      const lastIndex = table.rows.length - 1;\n      const row = table.rows[lastIndex];\n\n      row.remove();\n      break;\n\n    case 'column':\n      const tableRowArr = [...tableRows];\n\n      tableRowArr.forEach(item => item.lastElementChild.remove());\n      break;\n  }\n}\n\nfunction checkerOnEnable(countOfItems, addItem, removeItem) {\n  const countBigger = countOfItems < maxOfElements;\n  const countLess = countOfItems > minOfElements;\n\n  if (countBigger && countLess) {\n    addItem.disabled = false;\n    removeItem.disabled = false;\n  } else if (countOfItems === minOfElements) {\n    removeItem.disabled = true;\n  } else if (countOfItems === maxOfElements) {\n    addItem.disabled = true;\n  }\n}\n"]}